{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\utkar\\\\Downloads\\\\mera proj clone\\\\AI-Powered-Dynamic-Web-Personalization-Engine\\\\new proj\\\\dashboard\\\\src\\\\Config.jsx\",\n  _s = $RefreshSig$();\n// new proj/dashboard/src/Config.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIG_KEY = \"personalization_config\";\nexport default function Config() {\n  _s();\n  const [inputValue, setInputValue] = useState(\"sports, politics, tech, other\");\n  useEffect(() => {\n    const storedConfig = JSON.parse(localStorage.getItem(CONFIG_KEY));\n    if (storedConfig && storedConfig.clusterLabels) {\n      setInputValue(storedConfig.clusterLabels.join(\", \"));\n    }\n  }, []);\n  const handleSave = () => {\n    const newLabels = inputValue.split(\",\").map(s => s.trim()).filter(Boolean);\n    if (newLabels.length > 0) {\n      const newConfig = {\n        clusterLabels: newLabels\n      };\n      localStorage.setItem(CONFIG_KEY, JSON.stringify(newConfig));\n      alert(\"Configuration saved! Reload the demo page for changes to take effect.\");\n    } else {\n      alert(\"Please enter at least one cluster label.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Personalization Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Manage the category labels used by the engine.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"clusterLabels\",\n        children: \"Cluster Labels (comma-separated):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"clusterLabels\",\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        style: {\n          width: \"400px\",\n          marginLeft: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: \"Save Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Config, \"Zy+CJXthPrCARLkWhXgLRc8YSNc=\");\n_c = Config;\nvar _c;\n$RefreshReg$(_c, \"Config\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CONFIG_KEY","Config","_s","inputValue","setInputValue","storedConfig","JSON","parse","localStorage","getItem","clusterLabels","join","handleSave","newLabels","split","map","s","trim","filter","Boolean","length","newConfig","setItem","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","style","width","marginLeft","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/utkar/Downloads/mera proj clone/AI-Powered-Dynamic-Web-Personalization-Engine/new proj/dashboard/src/Config.jsx"],"sourcesContent":["// new proj/dashboard/src/Config.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst CONFIG_KEY = \"personalization_config\";\r\n\r\nexport default function Config() {\r\n  const [inputValue, setInputValue] = useState(\"sports, politics, tech, other\");\r\n\r\n  useEffect(() => {\r\n    const storedConfig = JSON.parse(localStorage.getItem(CONFIG_KEY));\r\n    if (storedConfig && storedConfig.clusterLabels) {\r\n      setInputValue(storedConfig.clusterLabels.join(\", \"));\r\n    }\r\n  }, []);\r\n\r\n  const handleSave = () => {\r\n    const newLabels = inputValue.split(\",\").map(s => s.trim()).filter(Boolean);\r\n    if (newLabels.length > 0) {\r\n      const newConfig = { clusterLabels: newLabels };\r\n      localStorage.setItem(CONFIG_KEY, JSON.stringify(newConfig));\r\n      alert(\"Configuration saved! Reload the demo page for changes to take effect.\");\r\n    } else {\r\n      alert(\"Please enter at least one cluster label.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Personalization Configuration</h2>\r\n      <p>Manage the category labels used by the engine.</p>\r\n      <div>\r\n        <label htmlFor=\"clusterLabels\">Cluster Labels (comma-separated):</label>\r\n        <input\r\n          id=\"clusterLabels\"\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          style={{ width: \"400px\", marginLeft: \"10px\" }}\r\n        />\r\n      </div>\r\n      <button onClick={handleSave} style={{ marginTop: \"10px\" }}>Save Configuration</button>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAG,wBAAwB;AAE3C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,+BAA+B,CAAC;EAE7EC,SAAS,CAAC,MAAM;IACd,MAAMQ,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACT,UAAU,CAAC,CAAC;IACjE,IAAIK,YAAY,IAAIA,YAAY,CAACK,aAAa,EAAE;MAC9CN,aAAa,CAACC,YAAY,CAACK,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,SAAS,GAAGV,UAAU,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;IAC1E,IAAIN,SAAS,CAACO,MAAM,GAAG,CAAC,EAAE;MACxB,MAAMC,SAAS,GAAG;QAAEX,aAAa,EAAEG;MAAU,CAAC;MAC9CL,YAAY,CAACc,OAAO,CAACtB,UAAU,EAAEM,IAAI,CAACiB,SAAS,CAACF,SAAS,CAAC,CAAC;MAC3DG,KAAK,CAAC,uEAAuE,CAAC;IAChF,CAAC,MAAM;MACLA,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtC9B,OAAA;MAAA0B,QAAA,EAAG;IAA8C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACrD9B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAO+B,OAAO,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxE9B,OAAA;QACEgC,EAAE,EAAC,eAAe;QAClBC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE9B,UAAW;QAClB+B,QAAQ,EAAGC,CAAC,IAAK/B,aAAa,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,UAAU,EAAE;QAAO;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA;MAAQyC,OAAO,EAAE5B,UAAW;MAACyB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAO,CAAE;MAAAhB,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEV;AAAC3B,EAAA,CAtCuBD,MAAM;AAAAyC,EAAA,GAANzC,MAAM;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}